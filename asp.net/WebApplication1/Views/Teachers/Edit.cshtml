@model Smoelenboek.Models.Teacher
@using Smoelenboek.Models;
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
@if ( Session["Role"].Equals("Teacher"))
{
  using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Teacher</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstMidName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstMidName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstMidName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hobby, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hobby, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hobby, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.SchoolGroups, "SchoolGroup", htmlAttributes: new { @class = "control-label col-md-2" })  <!-- gebruikt schoolgroep modelen haalt naam eruit? label-->
            <div class="col-md-10">

                @*@{ var i = 0; }*@
                @foreach (var group in ViewBag.AllGroups as IEnumerable<SchoolGroup>)
                {
                    // gebruikt viewbag allgroeps defineerd als schoolgroepen en  name is schoolgroep id. waarde is groeps idee. en html is groep naam.

                    <label>

                        <input type="checkbox" name="SchoolGroupIds" value="@group.Id" /> @group.GroupName

                        @*<input type="hidden" name="SchoolGroups[@(i++)].Id" value="@group.Id" />*@
                    </label> <br />
                }

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }
}
else
{
    @Html.Raw("Je mag geen edits doen je hebt niet de rechten.")
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
